/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'edu.sc.seis.launch4j' version '2.4.9';
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    // Use JUnit test framework.
    testImplementation "junit:junit:${junit_version}"

    // This dependency is used by the application.
    implementation "org.processing:core:${processing_core_version}"
    implementation "org.processing:pdf:${processing_pdf_version}"
    implementation name: 'itext' //why does processing use such an old version?
    implementation 'org.imgscalr:imgscalr-lib:4.2'
    implementation 'com.google.code.gson:gson:2.8.6'
}

project.setArchivesBaseName(app_name + "-" + app_version + "-" + app_state)
project.setApplicationName(app_name);

application {
    // Define the main class for the application.
    mainClassName  = 'drawingbot.FXApplication'
}

launch4j {
    mainClassName = 'drawingbot.FXApplication'
   // icon = "${projectDir}/icons/myApp.ico"
    //dontWrapJar = true;
    bundledJrePath = 'jre'
    bundledJre64Bit = true
    jreMinVersion = '1.8.0_202' //RECOMMENDED PROCESSING VERSION
    jreMaxVersion = '1.8.0_281' //LATEST JAVA 1.8.0
}

task packageExecutableDistribution(type: Zip) {
    getArchiveFileName().set("${app_name + "-" + app_version + "-" + app_state}.zip")
    getDestinationDirectory().set(file("$buildDir/distExecutable"));

    from "$buildDir/launch4j"
}

task addJreToDistributable(type: Copy) {
    //from zipTree("JRE")
    destinationDir = file("$buildDir/launch4j")
}

packageExecutableDistribution.dependsOn createExe
packageExecutableDistribution.dependsOn addJreToDistributable