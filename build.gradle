plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'edu.sc.seis.launch4j' version '2.4.9';
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

mainClassName  = 'drawingbot.FXApplication'
apply plugin: 'com.github.johnrengelman.shadow'

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    // Use JUnit test framework.
    testImplementation "junit:junit:${junit_version}"

    // This dependency is used by the application.
    //implementation "org.processing:core:${processing_core_version}"
    //shadow "org.processing:core:${processing_core_version}"

    implementation "com.itextpdf:itextpdf:${itext_version}"
    shadow "com.itextpdf:itextpdf:${itext_version}"

    implementation "org.imgscalr:imgscalr-lib:${imgscalr_version}"
    shadow "org.imgscalr:imgscalr-lib:${imgscalr_version}"

    implementation "com.google.code.gson:gson:${gson_version}"
    shadow "com.google.code.gson:gson:${gson_version}"

    implementation "org.locationtech.jts:jts-core:${jts_version}"
    shadow "org.locationtech.jts:jts-core:${jts_version}"

}

project.setArchivesBaseName(app_name + "-" + app_version + "-" + app_state)
project.setApplicationName(app_name);

application {}

launch4j {
   // icon = "${projectDir}/icons/myApp.ico"
    dontWrapJar = true;
    bundledJrePath = 'jre'
    bundledJre64Bit = false
    jreMinVersion = '1.8.0_191' //LOWEST TESTED VERSION
    jreMaxVersion = '1.8.0_281' //LATEST JAVA 1.8.0
    // '1.8.0_202' //RECOMMENDED PROCESSING VERSION
}

task packageExecutableDistribution(type: Zip) {
    getArchiveFileName().set("${app_name + "-" + app_version + "-" + app_state}.zip")
    getDestinationDirectory().set(file("$buildDir/distExecutable"));

    from "$buildDir/launch4j"
}

task addJreToDistributable(type: Copy) {
    //from zipTree("C:\\Program Files\\Java\\jre1.8.0_281")
    //destinationDir = file("$buildDir/launch4j")
}

packageExecutableDistribution.dependsOn createExe
packageExecutableDistribution.dependsOn addJreToDistributable